<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en">
	<title></title>
	<link href="https://brian.dawn.lol/atom.xml" rel="self" type="application/atom+xml"/>
	<link href="https://brian.dawn.lol"/>
	<generator uri="https://www.getzola.org/">Zola</generator>
	<updated>2020-06-12T00:00:00+00:00</updated>
	<id>https://brian.dawn.lol/atom.xml</id>
	<entry xml:lang="en">
		<title>How I manage my dotfiles</title>
		<published>2020-06-12T00:00:00+00:00</published>
		<updated>2020-06-12T00:00:00+00:00</updated>
		<link href="https://brian.dawn.lol/blog/managing-my-dotfiles/" type="text/html"/>
		<id>https://brian.dawn.lol/blog/managing-my-dotfiles/</id>
		<content type="html">&lt;p&gt;Over the years I&#x27;ve used several different methods of tracking my dotfiles. I&#x27;ve been using a specific method
of leveraging git that I have been using for many years now without change. Running &lt;code&gt;git init&lt;&#x2F;code&gt; inside your
home directory is not ideal because it means that your tools will always think you are inside a git repo
anywhere that you are. All credit for this method goes to user StreakyCobra on the
&lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=11070797&quot;&gt;dreaded orange site&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;With that said here&#x27;s what I did to start using this way of doing things:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#fcf0ca;&quot;&gt;
&lt;code&gt;git init --bare $HOME&#x2F;.dotfiles-repo
alias config=&#x27;&#x2F;usr&#x2F;bin&#x2F;git --git-dir=$HOME&#x2F;.dotfiles-repo&#x2F; --work-tree=$HOME&#x27;
config config status.showUntrackedFiles no
&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Then add:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#fcf0ca;&quot;&gt;
&lt;code&gt;alias config=&#x27;&#x2F;usr&#x2F;bin&#x2F;git --git-dir=$HOME&#x2F;.dotfiles-repo&#x2F; --work-tree=$HOME&#x27;
&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;To your bashrc to ensure you always get this alias. So we created a repo that&#x27;s not at our home directory level, and then create a new alias command
that uses that hidden repo as the working tree. What does this let us do?&lt;&#x2F;p&gt;
&lt;p&gt;We can track new files with:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#fcf0ca;&quot;&gt;
&lt;code&gt;config status
config add .vimrc
config commit -m &amp;quot;Add vimrc&amp;quot;
config add .config&#x2F;redshift.conf
config commit -m &amp;quot;Add redshift config&amp;quot;
config push
&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;I use branches to track differences between my Linux and MacOS machines just like you would with regular git.&lt;&#x2F;p&gt;
&lt;p&gt;On new machines you can do:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#fcf0ca;&quot;&gt;
&lt;code&gt;git clone --bare [your-dotfiles-repo] $HOME&#x2F;.dotfiles-repo
&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;We need to create the same alias as before:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#fcf0ca;&quot;&gt;
&lt;code&gt;alias config=&#x27;&#x2F;usr&#x2F;bin&#x2F;git --git-dir=$HOME&#x2F;.dotfiles-repo&#x2F; --work-tree=$HOME&#x27;
&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Now we are ready to initialize all our files from the repo. You can do this with:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#fcf0ca;&quot;&gt;
&lt;code&gt;config checkout
&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;You will probably have file conflicts since git will refuse to overwrite files that already exist. You can either delete&#x2F;backup these files by hand, or if you are like me and need an adrenaline rush you can just force overwrite them:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#fcf0ca;&quot;&gt;
&lt;code&gt;config checkout -f
&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Finally we need to make it so we don&#x27;t see every other file in our home directory
that isn&#x27;t tracked:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#fcf0ca;&quot;&gt;
&lt;code&gt;config config status.showUntrackedFiles no
&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Now your system is ready to go!&lt;&#x2F;p&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>Some of my favorite things</title>
		<published>2020-04-15T00:00:00+00:00</published>
		<updated>2020-04-15T00:00:00+00:00</updated>
		<link href="https://brian.dawn.lol/list/favorite-things/" type="text/html"/>
		<id>https://brian.dawn.lol/list/favorite-things/</id>
		<content type="html">&lt;p&gt;This is a list of some of my favorite tools that are maybe lesser known. This file
exists mostly so I can keep track of all the things I need to remember I have in my
toolbelt.&lt;&#x2F;p&gt;
&lt;h1 id=&quot;kitty&quot;&gt;kitty&lt;&#x2F;h1&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;kovidgoyal&#x2F;kitty&quot;&gt;github&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;A terminal emulator that is pretty fast and has window management.
To see how great it is, just hit &lt;code&gt;ctrl+shift+enter&lt;&#x2F;code&gt; to get window splitting.
Kitty is very configurable.&lt;&#x2F;p&gt;
&lt;p&gt;Install with any of these:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#fcf0ca;&quot;&gt;
&lt;code&gt;curl -L https:&#x2F;&#x2F;sw.kovidgoyal.net&#x2F;kitty&#x2F;installer.sh | sh &#x2F;dev&#x2F;stdin
sudo pacman -S kitty
&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;&lt;h1 id=&quot;tunnelto&quot;&gt;tunnelto&lt;&#x2F;h1&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;agrinman&#x2F;tunnelto&quot;&gt;github&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Expose a local HTTP server to the internet with a URL.&lt;&#x2F;p&gt;
&lt;p&gt;Install with:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#fcf0ca;&quot;&gt;
&lt;code&gt;cargo install tunnelto
&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;&lt;h1 id=&quot;croc&quot;&gt;croc&lt;&#x2F;h1&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;schollz&#x2F;croc&quot;&gt;github&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Send files&#x2F;folders to someone else directly and easily.&lt;&#x2F;p&gt;
&lt;p&gt;Install with any of these:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#fcf0ca;&quot;&gt;
&lt;code&gt;curl https:&#x2F;&#x2F;getcroc.schollz.com | bash
sudo pacman -S croc
&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;&lt;h1 id=&quot;nvtop&quot;&gt;nvtop&lt;&#x2F;h1&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Syllo&#x2F;nvtop&quot;&gt;github&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Like htop but for GPUs.&lt;&#x2F;p&gt;
&lt;p&gt;Install with:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#fcf0ca;&quot;&gt;
&lt;code&gt;sudo pacman -S nvtop
&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;&lt;h1 id=&quot;starship&quot;&gt;starship&lt;&#x2F;h1&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;starship&#x2F;starship&quot;&gt;github&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;A fancy and fast shell prompt.&lt;&#x2F;p&gt;
&lt;p&gt;Install via:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#fcf0ca;&quot;&gt;
&lt;code&gt;curl -fsSL https:&#x2F;&#x2F;starship.rs&#x2F;install.sh | bash
&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;&lt;h1 id=&quot;sshb0t&quot;&gt;sshb0t&lt;&#x2F;h1&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;genuinetools&#x2F;sshb0t&quot;&gt;github&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Use this to keep authorized keys on servers for easier
ssh access. Run with docker:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#fcf0ca;&quot;&gt;
&lt;code&gt;&lt;span style=&quot;color:#282828aa;&quot;&gt;docker run -d --restart always \
    --name sshb0t \
    -v ${HOME}&#x2F;.ssh&#x2F;authorized_keys:&#x2F;root&#x2F;.ssh&#x2F;authorized_keys \
    r.j3ss.co&#x2F;sshb0t --user [YOUR GITHUB USERNAME HERE] --keyfile &#x2F;root&#x2F;.ssh&#x2F;authorized_keys
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;&lt;h1 id=&quot;bottom&quot;&gt;bottom&lt;&#x2F;h1&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ClementTsang&#x2F;bottom&quot;&gt;github&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;A top&#x2F;htop alternative. Run it with:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#fcf0ca;&quot;&gt;
&lt;code&gt;btm
&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Install with:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#fcf0ca;&quot;&gt;
&lt;code&gt;cargo install bottom
&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;&lt;h1 id=&quot;fzf&quot;&gt;fzf&lt;&#x2F;h1&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;junegunn&#x2F;fzf&quot;&gt;github&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;A fuzzy file finder that can integrate with your shell to give you fuzzy searching with ctrl-t and ctrl-r.&lt;&#x2F;p&gt;
&lt;p&gt;Installation options:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#fcf0ca;&quot;&gt;
&lt;code&gt;brew install fzf &amp;amp;&amp;amp; $(brew --prefix)&#x2F;opt&#x2F;fzf&#x2F;install
git clone --depth 1 https:&#x2F;&#x2F;github.com&#x2F;junegunn&#x2F;fzf.git ~&#x2F;.fzf &amp;amp;&amp;amp; ~&#x2F;.fzf&#x2F;install
sudo pacman -S fzf
&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;&lt;h1 id=&quot;rg&quot;&gt;rg&lt;&#x2F;h1&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;BurntSushi&#x2F;ripgrep&quot;&gt;github&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Extremely fast searching of files and directories.&lt;&#x2F;p&gt;
&lt;p&gt;Installation options:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#fcf0ca;&quot;&gt;
&lt;code&gt;brew install ripgrep
pacman -S ripgrep
cargo install ripgrep
&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;&lt;h1 id=&quot;dust&quot;&gt;dust&lt;&#x2F;h1&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;bootandy&#x2F;dust&quot;&gt;github&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;A better version of &lt;code&gt;du&lt;&#x2F;code&gt;. Run it just with:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#fcf0ca;&quot;&gt;
&lt;code&gt;dust some-folder
&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;To get a nice display of what&#x27;s taking up space inside that folder.&lt;&#x2F;p&gt;
&lt;p&gt;Installation options:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#fcf0ca;&quot;&gt;
&lt;code&gt;cargo install du-dust
&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;&lt;h1 id=&quot;deno&quot;&gt;deno&lt;&#x2F;h1&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;denoland&#x2F;deno&quot;&gt;github&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;A standalone sandboxed javascript&#x2F;typescript runtime that makes writing quick
and fast scripts a breeze.&lt;&#x2F;p&gt;
&lt;p&gt;Here&#x27;s a quick example that connects to a local postgres db and runs a query:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#fcf0ca;&quot;&gt;
&lt;code&gt;&lt;span style=&quot;color:#9d0006;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span style=&quot;color:#282828aa;&quot;&gt;{ &lt;&#x2F;span&gt;&lt;span style=&quot;color:#282828;&quot;&gt;Client &lt;&#x2F;span&gt;&lt;span style=&quot;color:#282828aa;&quot;&gt;} &lt;&#x2F;span&gt;&lt;span style=&quot;color:#9d0006;&quot;&gt;from &lt;&#x2F;span&gt;&lt;span style=&quot;color:#79740e;&quot;&gt;&amp;quot;https:&#x2F;&#x2F;deno.land&#x2F;x&#x2F;postgres&#x2F;mod.ts&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#282828aa;&quot;&gt;;

&lt;&#x2F;span&gt;&lt;span style=&quot;color:#9d0006;&quot;&gt;async function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#407959;&quot;&gt;main&lt;&#x2F;span&gt;&lt;span style=&quot;color:#282828aa;&quot;&gt;() {
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#9d0006;&quot;&gt;const &lt;&#x2F;span&gt;&lt;span style=&quot;color:#282828;&quot;&gt;client &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b23c15;&quot;&gt;= new &lt;&#x2F;span&gt;&lt;span style=&quot;color:#282828;&quot;&gt;Client({
    user: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#79740e;&quot;&gt;&amp;quot;user&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#282828;&quot;&gt;,
    database: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#79740e;&quot;&gt;&amp;quot;test&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#282828;&quot;&gt;,
    host: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#79740e;&quot;&gt;&amp;quot;localhost&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#282828;&quot;&gt;,
    port: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#79740e;&quot;&gt;&amp;quot;5432&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#282828;&quot;&gt;,
  })&lt;&#x2F;span&gt;&lt;span style=&quot;color:#282828aa;&quot;&gt;;
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#9d0006;&quot;&gt;await &lt;&#x2F;span&gt;&lt;span style=&quot;color:#282828;&quot;&gt;client.connect()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#282828aa;&quot;&gt;;
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#9d0006;&quot;&gt;const &lt;&#x2F;span&gt;&lt;span style=&quot;color:#282828;&quot;&gt;result &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b23c15;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#9d0006;&quot;&gt;await &lt;&#x2F;span&gt;&lt;span style=&quot;color:#282828;&quot;&gt;client.query(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#79740e;&quot;&gt;&amp;quot;SELECT * FROM people;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#282828;&quot;&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#282828aa;&quot;&gt;;
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b57614;&quot;&gt;console&lt;&#x2F;span&gt;&lt;span style=&quot;color:#282828;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b57614;&quot;&gt;log&lt;&#x2F;span&gt;&lt;span style=&quot;color:#282828;&quot;&gt;(result.rows)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#282828aa;&quot;&gt;;
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#9d0006;&quot;&gt;await &lt;&#x2F;span&gt;&lt;span style=&quot;color:#282828;&quot;&gt;client.end()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#282828aa;&quot;&gt;;
}

&lt;&#x2F;span&gt;&lt;span style=&quot;color:#282828;&quot;&gt;main()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#282828aa;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Installation options:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#fcf0ca;&quot;&gt;
&lt;code&gt;curl -fsSL https:&#x2F;&#x2F;deno.land&#x2F;x&#x2F;install&#x2F;install.sh | sh
&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;&lt;h1 id=&quot;syncthing&quot;&gt;syncthing&lt;&#x2F;h1&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;syncthing&#x2F;syncthing&quot;&gt;github&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Think of it like a peer to peer dropbox clone. Your files only ever live on
your devices.&lt;&#x2F;p&gt;
&lt;h1 id=&quot;pandoc&quot;&gt;pandoc&lt;&#x2F;h1&gt;
&lt;p&gt;Convert to and from a large number of markup formats. I like standalone html pages
with embedded CSS. You can do this with the following command:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#fcf0ca;&quot;&gt;
&lt;code&gt;pandoc --self-contained --table-of-contents --to html5+auto_identifiers
       --standalone INPUT.md --output OUTPUT.html
&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;This will even base64 encode included images and embed them into the resulting HTML.
If you don&#x27;t want a table of contents just leave off the flag. If you want to embed a CSS file add the following to the above
command:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#fcf0ca;&quot;&gt;
&lt;code&gt;--css=YOURCSS.css
&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;For a good example of some nice CSS check out this &lt;a href=&quot;https:&#x2F;&#x2F;gist.github.com&#x2F;killercup&#x2F;5917178&quot;&gt;gist&lt;&#x2F;a&gt;. Also pandoc can generate HTML presentations from markdown.&lt;&#x2F;p&gt;
&lt;h1 id=&quot;ipfs&quot;&gt;ipfs&lt;&#x2F;h1&gt;
&lt;p&gt;A peer to peer hypermedia protocol.&lt;&#x2F;p&gt;
</content>
	</entry>
</feed>
